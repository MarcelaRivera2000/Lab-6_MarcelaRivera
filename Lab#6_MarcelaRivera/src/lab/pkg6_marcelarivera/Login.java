/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab.pkg6_marcelarivera;

import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Mvrivera
 */
public class Login extends javax.swing.JFrame {

    public Login() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        at.Leer();
        for (Personas u : at.getLista()) {
            contactos.add(u);
        }
        UConvers.Leer();
        for (String u : UConvers.getLista()) {
            publicaciones.add(u);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Registrarse = new javax.swing.JFrame();
        R_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        R_usu = new javax.swing.JTextField();
        R_Contra = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        R_cumple = new datechooser.beans.DateChooserCombo();
        Principal = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        Contactos = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Comentario = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        L_usuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        L_passs = new javax.swing.JPasswordField();

        jLabel3.setText("Nombre:");

        jButton3.setText("Registrarse");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Usuario:");

        jLabel5.setText("Pass:");

        jLabel6.setText("Cumplea√±os:");

        R_cumple.setCalendarPreferredSize(new java.awt.Dimension(500, 360));
        R_cumple.setFormat(0);

        javax.swing.GroupLayout RegistrarseLayout = new javax.swing.GroupLayout(Registrarse.getContentPane());
        Registrarse.getContentPane().setLayout(RegistrarseLayout);
        RegistrarseLayout.setHorizontalGroup(
            RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistrarseLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addGroup(RegistrarseLayout.createSequentialGroup()
                        .addGroup(RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(R_Contra)
                            .addComponent(R_usu)
                            .addComponent(R_name)
                            .addComponent(R_cumple, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))))
                .addGap(75, 75, 75))
        );
        RegistrarseLayout.setVerticalGroup(
            RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistrarseLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R_name, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R_usu, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(R_Contra, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(28, 28, 28)
                .addGroup(RegistrarseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(R_cumple, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(jButton3)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        Contactos.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(Contactos);

        jLabel8.setText("Contactos");

        Comentario.setColumns(20);
        Comentario.setRows(5);
        jScrollPane2.setViewportView(Comentario);

        jButton4.setText("Enviar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        TextArea.setEditable(false);
        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane3.setViewportView(TextArea);

        jLabel9.setText("Conversacion:");

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal.getContentPane());
        Principal.getContentPane().setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        L_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_usuarioActionPerformed(evt);
            }
        });

        jLabel1.setText("Usuario:");

        jLabel2.setText("Pass:");

        jButton1.setText("Registrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ingresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(L_passs)
                                    .addComponent(L_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(L_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(L_passs, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(36, 36, 36)
                .addComponent(jButton2)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int aux = 0;
        for (Personas i : contactos) {
            if (i.getUsuario().equals(R_usu.getText())) {
                aux = 1;
                break;
            }
        }
        if (aux == 1) {
            JOptionPane.showMessageDialog(this, "Este nombre de usuario ya esta ocupado");
            R_usu.setText("");
        } else {
            String[] aux2 = R_cumple.getText().split(",");
            String aux3 = "";
            for (int i = 0; i < aux2[2].length(); i++) {
                if (i > 0) {
                    aux3 += aux2[2].charAt(i);
                }
            }
            int R_edad = 2020 - Integer.parseInt(aux3);
            if (R_edad < 14) {
                JOptionPane.showMessageDialog(this, "Tiene que tener mas de 13 a√±os ");
                R_usu.setText("");
                R_Contra.setText("");
                R_name.setText("");
            } else {
                try {
                    JOptionPane.showMessageDialog(this, "Se registro con exito");
                    Personas p = new Personas(R_name.getText(), R_usu.getText(), R_Contra.getText(), R_cumple.getText(), R_edad);
                    contactos.add(p);
                    at.Leer();
                    at.setPersona(p);
                    at.Escribir();

                    this.pack();
                    this.setLocationRelativeTo(Registrarse);
                    Registrarse.setVisible(false);
                    this.setVisible(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Registrarse.pack();
        Registrarse.setLocationRelativeTo(this);
        Registrarse.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void L_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_usuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_L_usuarioActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int p = 0;
        int cont = 0;
        for (Personas i : contactos) {
            if (i.getUsuario().equals(L_usuario.getText()) && i.getContra().equals(L_passs.getText())) {
                p = 1;
                Principal.pack();
                Principal.setLocationRelativeTo(this);
                this.setVisible(false);
                Principal.setVisible(true);
                posi = cont;
                DefaultListModel modelo = (DefaultListModel) Contactos.getModel();
                for (Personas u : contactos) {
                    modelo.addElement(u);
                }
                Contactos.setModel(modelo);
                llenar();
                break;
            }
            cont++;
        }
        if (p == 0) {
            JOptionPane.showMessageDialog(this, "Usuario no encontrado");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            coment = Comentario.getText();
            System.out.println(coment.charAt(coment.length() - 1));
            if (coment.charAt(coment.length() - 1) == '1') {
                cifra = 1;
            } else if (coment.charAt(coment.length() - 1) == '2') {
                System.out.println("hds");
                cifra = 2;
            } else if (coment.charAt(coment.length() - 1) == '3') {
                cifra = 3;
            } else {
                if (coment.charAt(coment.length() - 1) == 'W') {
                    if (coment.charAt(coment.length() - 2) == 'Y') {
                        if (coment.charAt(coment.length() - 3) == 'E') {
                            if (coment.charAt(coment.length() - 4) == 'K') {
                                if (coment.charAt(coment.length() - 5) == ' ') {
                                    if (coment.charAt(coment.length() - 6) == '4') {
                                        cifra = 4;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            String p = cifrado(coment);
            String mensaje = " Mensaje: " + coment;
            String listoo = contactos.get(posi).getUsuario() + ": " + mensaje + " Cifrado: " + p;
            TextArea.append(listoo + "\n");
            UConvers.Leer();
            UConvers.setPersona(coment);
            UConvers.Escribir();
            Comentario.setText("");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed
    String coment;
    public void llenar() {
        String u = "";
        for (String t : publicaciones) {
            u += (t + "\n");
        }
        TextArea.setText(u);
    }

    public String cifrado(String coment) {
        switch (cifra) {
            case 1:
                cifradoo = primero(coment);
                break;
            case 2:
                cifradoo=segundo(coment);
                break;
            case 3:
                cifradoo=tercero(coment);
                break;
            case 4:
                cifradoo = Cuatro(coment);
                break;
            default:
                JOptionPane.showMessageDialog(this, "No tiene ningun cifrado");
                break;
        }
        return cifradoo;
    }

    public String segundo(String mensaje) {
        String aux="";
        for (int i = 0; i < mensaje.length()-2; i++) {
            aux+=mensaje.charAt(i);
        }
        String texto = "";
        int aux1;
        char letra;
        for (int j = 0; j < aux.length(); j++) {
            if (aux.charAt(j) != ' ') {
                letra = aux.charAt(j);
                aux1 = letra;
                texto += aux1;
               
            } else {
                texto += ' '; 
            }
        }
        return texto;
    }

   public String tercero(String mensaje) {
       
        String texto = "";
        char c;
        String[] tokens = mensaje.split(" ");
        for (int i = 0; i < tokens.length; i++) {
            for (int j = 0; j < tokens[i].length(); j++) {
                int posi;
                int restas;
                int d = 0;
                 if (tokens[i].charAt(j) >= 65 && tokens[i].charAt(j) <= 90) {
                    int letra = tokens[i].charAt(j);
                    posi = letra - 65;
                    restas = 25 - posi;
                    d = 65 + restas;
                } else if (tokens[i].charAt(j) >= 97 && tokens[i].charAt(j) <= 122) {
                    int letra = tokens[i].charAt(j);
                    posi = letra - 97;
                    restas = 25 - posi;
                    d = 97 + restas;

                }
                texto += (char) d;

            }
            texto += " ";

        }
        return texto;

    }

    public String Cuatro(String texto) {
        int cont1 = 0, cont2 = 1, cont3 = 2, cont4 = 3;
        String aqui = "";
        for (int i = 0; i < texto.length() - 6; i++) {
            if (texto.charAt(i) != ' ') {
                aqui += texto.charAt(i);
            }
        }
        for (int i = 0; i < aqui.length(); i++) {
            if (i == cont1) {
                K.add(aqui.charAt(i));
                cont1 += 4;
            } else if (i == cont2) {
                E.add(aqui.charAt(i));
                cont2 += 4;
            } else if (i == cont3) {
                Y.add(aqui.charAt(i));
                cont3 += 4;
            } else if (i == cont4) {
                W.add(aqui.charAt(i));
                cont4 += 4;
            }
        }
        String listo = "";
        for (Character o : E) {
            listo += o;
        }
        for (Character o : K) {
            listo += o;
        }
        for (Character o : W) {
            listo += o;
        }
        for (Character o : Y) {
            listo += o;
        }
        String i = listo.toUpperCase();
        return i;
    }

    public static String primero(String l) {
       String texto="";
        for (int i = 0; i < l.length()-2; i++) {
            texto+=l.charAt(i);
        }
        texto = texto.toLowerCase();
        String[] tokens = texto.split(" ");
        String t, p1, rt, aux, mensaje = "";
        String vocales = "aeiou";
        for (int i = 0; i < tokens.length; i++) {
            t = tokens[i];
            int index = 0;
            char[] characters = t.toCharArray();

            for (int j = 0; j < characters.length; j++) {
                char character = characters[j];
                if (vocales.indexOf(character) != -1) {
                    index = vocales.indexOf(character);
                }
            }
            if (t.length() <= 3) {
                aux = t.concat("way");
                mensaje += aux + " ";
            } else {
                p1 = t.substring(0, index + 1);
                rt = t.substring(index);
                aux = rt + p1 + "ay";
                mensaje += aux + " ";
            }
        }
        return mensaje;
    }

    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Comentario;
    private javax.swing.JList<String> Contactos;
    private javax.swing.JPasswordField L_passs;
    private javax.swing.JTextField L_usuario;
    private javax.swing.JFrame Principal;
    private javax.swing.JPasswordField R_Contra;
    private datechooser.beans.DateChooserCombo R_cumple;
    private javax.swing.JTextField R_name;
    private javax.swing.JTextField R_usu;
    private javax.swing.JFrame Registrarse;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
    ArrayList<Personas> contactos = new ArrayList();
    ArrayList<String> publicaciones = new ArrayList();
    ArchivosTexto at = new ArchivosTexto("./Users.txt", contactos);
    ArchivoConversacion UConvers = new ArchivoConversacion("./Conversaciones.txt", publicaciones);
    int posi, cifra;
    String cifradoo = "";
    ArrayList<Character> K = new ArrayList();
    ArrayList<Character> E = new ArrayList();
    ArrayList<Character> Y = new ArrayList();
    ArrayList<Character> W = new ArrayList();

}
